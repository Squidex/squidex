apiVersion: v1
kind: Namespace
metadata:
  name: squidex
  annotations:
    iam.amazonaws.com/permitted: ".*"
---
apiVersion: 'kubernetes-client.io/v1'
kind: ExternalSecret
metadata:
  name: squidex-dev-v2
  namespace: squidex
spec:
  backendType: secretsManager
  data:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: squidex-dev-v2
  namespace: squidex
spec:
  replicas: ${SQUIDEX_DEV_REPLICAS}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: squidex-dev-v2
  strategy:
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: squidex-dev-v2
    spec:
      containers:
        - name: squidex-dev-v2
          image: 597764168253.dkr.ecr.us-east-1.amazonaws.com/homer-squidex:${SQUIDEX_DEV_VERSION_TAG}
          imagePullPolicy: Always
          resources:
            - name: IDENTITY__ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: squidex_admin_password
            - name: URLS__BASEURL
              value: "https://${SQUIDEX_DEV_DOMAIN_NAME}"
            - name: EVENTSTORE__MONGODB__CONFIGURATION
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: mongo_connection_string
            - name: EVENTSTORE__MONGODB__DATABASE
              value: "Squidex"
            - name: STORE__MONGODB__CONFIGURATION
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: mongo_connection_string
            - name: STORE__MONGODB__DATABASE
              value: "Squidex"
            - name: ASSETSTORE__AMAZONS3__ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: iam_access_key
            - name: ASSETSTORE__AMAZONS3__SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: iam_secret_key
            - name: IDENTITY__GOOGLECLIENT
              value: "${SQUIDEX_DEV_GOOGLE_CLIENT}"
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: google_auth_client_id
            - name: IDENTITY__GOOGLESECRET
              value: "${SQUIDEX_DEV_GOOGLE_SECRET}"
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: google_auth_secret
            # Specifically Blanking out to deactive these options
            - name: IDENTITY__GITHUBCLIENT
            - name: EMAIL__SMTP__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: squidex-dev-v2
                  key: email_smtp_password
            - name: EMAIL__SMTP__ENABLESSL
              value: "true"
apiVersion: v1
kind: Service
metadata:
  name: squidex-dev-v2
  namespace: squidex
  labels:
    name: squidex-dev-v2
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: squidex-dev-v2
  type: NodePort
---
---
kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  namespace: squidex
  name: squidex-dev-v2
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
        paths:
        - path: /
          backend:
            serviceName: squidex-dev-v2
            servicePort: 80

