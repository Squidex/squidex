apiVersion: apps/v1
kind: Deployment
metadata:
  name: squidex
spec:
  replicas: $REPLICA_COUNT
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: squidex
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: squidex
    spec:
      containers:
        - name: squidex
          image: $DOCKER_IMAGE
          imagePullPolicy: Always
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "3072Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /readiness
              port: 80
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
              scheme: HTTP
            initialDelaySeconds: 360
          ports:
            - containerPort: 80
          env:
            # The following can be set to create an admin user
            - name: CONTENTS__DEFAULTPAGESIZE
              value: '400'
            - name: IDENTITY__ADMINRECREATE
              value: "true"
            - name: IDENTITY__ADMINEMAIL
              valueFrom:
                secretKeyRef:
                  name: squidex-params
                  key: ADMIN_EMAIL
            - name: IDENTITY__ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: squidex_admin_password
            - name: URLS__BASEURL
              valueFrom:
                secretKeyRef:
                  name: squidex-params
                  key: DOMAIN
            - name: URLS__ENFORCEHTTPS
              value: "false"
            - name: HEALTHZ__GC__THRESHOLD
              value: "8192"
            - name: ASSETS__MAXSIZE
              value: "52428800"
            - name: LOGGING__HUMAN
              value: "false"
            - name: ORLEANS__CLUSTERING
              value: "MongoDB"
            - name: EVENTSTORE__MONGODB__CONFIGURATION
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: mongo_connection_string
            - name: EVENTSTORE__MONGODB__DATABASE
              value: "Squidex"
            - name: STORE__MONGODB__CONFIGURATION
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: mongo_connection_string
            - name: STORE__MONGODB__DATABASE
              value: "Squidex"
            - name: STORE__MONGODB__CONTENTDATABASE
              value: "SquidexContentV2"
            - name: ASSETSTORE__TYPE
              value: "AmazonS3"
            - name: ASSETSTORE__AMAZONS3__BUCKET
              valueFrom:
                secretKeyRef:
                  name: squidex-params
                  key: S3_BUCKET
            - name: ASSETSTORE__AMAZONS3__REGIONNAME
              value: "us-east-1"
            - name: ASSETSTORE__AMAZONS3__ACCESSKEY
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: iam_access_key
            - name: ASSETSTORE__AMAZONS3__SECRETKEY
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: iam_secret_key
            - name: IDENTITY__GOOGLECLIENT
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: google_auth_client_id
            - name: IDENTITY__GOOGLESECRET
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: google_auth_secret
            # Specifically Blanking out to deactive these options
            - name: IDENTITY__GITHUBCLIENT
              value: ""
            - name: IDENTITY__MICROSOFTCLIENT
              value: ""
            - name: LOGGING__DATADOG
              value: "true"
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: EMAIL__SMTP__SERVER
              value: "email-smtp.us-east-1.amazonaws.com"
            - name: EMAIL__SMTP__SENDER
              value: "squidex@learnwithhomer.com"
            - name: EMAIL__SMTP__USERNAME
              value: AKIAYWLMFLI6YQPOC56T
            - name: EMAIL__SMTP__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: squidex
                  key: email_smtp_password
            - name: EMAIL__SMTP__ENABLESSL
              value: "true"
            - name: EMAIL__SMTP__PORT
              value: "587"
      terminationGracePeriodSeconds: 30
