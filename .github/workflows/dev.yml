name: Dev
concurrency: build

on:
  push:
    branches:
      - 'master'
      - 'release/*'
  pull_request:
    branches:
      - 'master'
      - 'release/*'

jobs:
  build_test:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare - Checkout
        uses: actions/checkout@v4.0.0

      - name: Prepare - Inject short Variables
        uses: rlespinasse/github-slug-action@v4.4.1

      - name: Prepare - Set up QEMU
        uses: docker/setup-qemu-action@v3.0.0

      - name: Prepare - Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Build - BUILD
        uses: docker/build-push-action@v5.0.0
        with:
          load: true
          build-args: "SQUIDEX__RUNTIME__VERSION=7.0.0-dev-${{ env.BUILD_NUMBER }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: squidex-local

      - name: Test - Start Compose
        run: docker-compose up -d
        working-directory: tools/TestSuite

      - name: Test - RUN
        uses: kohlerdominik/docker-run-action@v1.1.0
        with:
          image: squidex/build:7
          environment: |
            CONFIG__BACKUPURL=http://localhost:5000
            CONFIG__WAIT=60
            CONFIG__SERVER__URL=http://localhost:8080
            WEBHOOKCATCHER__HOST__ENDPOINT=webhookcatcher
          default_network: host
          options: --name test1
          volumes: ${{ github.workspace }}:/src
          run: dotnet test /src/tools/TestSuite/TestSuite.ApiTests/TestSuite.ApiTests.csproj --filter Category!=NotAutomated

      - name: Test - RUN on path
        uses: kohlerdominik/docker-run-action@v1.1.0
        with:
          image: squidex/build:7
          environment: |
            CONFIG__BACKUPURL=http://localhost:5000
            CONFIG__WAIT=60
            CONFIG__SERVER__URL=http://localhost:8081/squidex
            WEBHOOKCATCHER__HOST__ENDPOINT=webhookcatcher
          default_network: host
          options: --name test2
          volumes: ${{ github.workspace }}:/src
          run: dotnet test /src/tools/TestSuite/TestSuite.ApiTests/TestSuite.ApiTests.csproj --filter Category!=NotAutomated

      - name: Test - RUN with dedicated collections
        uses: kohlerdominik/docker-run-action@v1.1.0
        with:
          image: squidex/build:7
          environment: |
            CONFIG__BACKUPURL=http://localhost:5000
            CONFIG__WAIT=60
            CONFIG__SERVER__URL=http://localhost:8082
            WEBHOOKCATCHER__HOST__ENDPOINT=webhookcatcher
          default_network: host
          options: --name test3
          volumes: ${{ github.workspace }}:/src
          run: dotnet test /src/tools/TestSuite/TestSuite.ApiTests/TestSuite.ApiTests.csproj --filter Category!=NotAutomated
       
      - name: Test - Dump docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2.2.1
        with:
         images: 'squidex-local,squidex/resizer'
         tail: '100'

      - name: Test - Cleanup
        if: always()
        run: docker-compose down
        working-directory: tools/TestSuite

      - name: Publish - Calculate Version
        if: github.event_name != 'pull_request'
        env:
          BUILD_NUMBER: ${{ github.run_number }}
        run: |
          echo "BUILD_NUMBER=$(($BUILD_NUMBER + 6000))" >> $GITHUB_ENV

      - name: Publish - Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish - Rename Tags
        if: github.event_name != 'pull_request'
        run: |
          docker tag squidex-local squidex/squidex:dev
          docker tag squidex-local squidex/squidex:dev-${{ env.BUILD_NUMBER }}
    
      - name: Publish - Push Tags
        if: github.event_name != 'pull_request'
        run: |
          docker push squidex/squidex:dev
          docker push squidex/squidex:dev-${{ env.BUILD_NUMBER }}
