services:
  mongo:
    image: mongo:latest
    ports:
      - "27019:27017"
    networks:
      - internal

  postgres:
    image: "postgres:15.1"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=squidex

  # Base configuration
  squidex_mongo1:
    extends:
      file: docker-compose-base.yml
      service: squidex_base
    environment:
      - EVENTSTORE__MONGODB__DATABASE=squidex_mongo1
      - STORE__MONGODB__CONTENTDATABASE=squidex_mongo1_content
      - STORE__MONGODB__DATABASE=squidex_mongo1
      - URLS__BASEURL=http://localhost:8080
    depends_on:
      - mongo

  # Hosted on path and separate worker
  squidex_mongo2:
    extends:
      file: docker-compose-base.yml
      service: squidex_base
    environment:
      - CLUSTERING__WORKER=false
      - EVENTSTORE__MONGODB__DATABASE=squidex_mongo2
      - STORE__MONGODB__CONTENTDATABASE=squidex_mongo2_content
      - STORE__MONGODB__DATABASE=squidex_mongo2
      - STORE__MONGODB__TEXTHARDCOUNT=20
      - URLS__BASEPATH=squidex/
      - URLS__BASEURL=http://localhost:8081/squidex/
    depends_on:
      - mongo

  # Hosted on path and separate worker
  squidex_mongo2_worker:
    extends:
      file: docker-compose-base.yml
      service: squidex_base
    environment:
      - CLUSTERING__WORKER=true
      - EVENTSTORE__MONGODB__DATABASE=squidex_mongo2
      - STORE__MONGODB__CONTENTDATABASE=squidex_mongo2_content
      - STORE__MONGODB__DATABASE=squidex_mongo2
      - STORE__MONGODB__TEXTHARDCOUNT=20
      - URLS__BASEPATH=squidex/
      - URLS__BASEURL=http://localhost:8081/squidex/
    depends_on:
      - mongo

  # Separate datbases
  squidex_mongo3:
    extends:
      file: docker-compose-base.yml
      service: squidex_base
    environment:
      - ASSETS__RESIZERURL=http://resizer
      - CONTENTS__OPTIMIZEFORSELFHOSTING=true
      - EVENTSTORE__MONGODB__DATABASE=squidex3
      - STORE__MONGODB__CONTENTDATABASE=squidex3_content
      - STORE__MONGODB__DATABASE=squidex3
      - URLS__BASEURL=http://localhost:8082
    depends_on:
      - mongo

  squidex_postgres:
    extends:
      file: docker-compose-base.yml
      service: squidex_base
    environment:
      - EVENTSTORE__TYPE=Sql
      - STORE__SQL__CONNECTIONSTRING=Server=localhost;Port=5432;Database=squidex;Pooling=true;Username=admin;Password=secret;SSL Mode=Disable;Include Error Detail=true;Minimum Pool Size=0;Maximum Pool Size=1000;
      - STORE__SQL__PROVIDER=Postgres
      - MESSAGING__TYPE=Sql
      - URLS__BASEURL=http://localhost:8083
    depends_on:
      - postgres

  resizer:
    image: squidex/resizer:1.3.0
    networks:
      - internal
    depends_on:
      - mongo

  webhookcatcher:
    image: tarampampam/webhook-tester:2
    command: serve --port 1026
    ports:
      - "1026:1026"
    networks:
      - internal

  squidex_mongo_proxy1:
    image: squidex/caddy-proxy:2.6.2
    ports:
      - "8080:8080"
    environment:
      - SITE_ADDRESS=http://localhost:8080
      - SITE_PATH=*
      - SITE_SERVER="squidex_mongo1:5000"
    depends_on:
      - squidex_mongo1
    networks:
      - internal
    restart: unless-stopped

  squidex_mongo_proxy2:
    image: squidex/caddy-proxy-path:2.6.2
    ports:
      - "8081:8081"
    environment:
      - SITE_ADDRESS=http://localhost:8081
      - SITE_PATH=/squidex/*
      - SITE_SERVER="squidex_mongo2:5000"
    depends_on:
      - squidex_mongo2
    networks:
      - internal
    restart: unless-stopped

  squidex_mongo_proxy3:
    image: squidex/caddy-proxy-path:2.6.2
    ports:
      - "8082:8082"
    environment:
      - SITE_ADDRESS=http://localhost:8082
      - SITE_PATH=*
      - SITE_SERVER="squidex_mongo3:5000"
    depends_on:
      - squidex_mongo3
    networks:
      - internal
    restart: unless-stopped

  squidex_postgres:
    image: squidex/caddy-proxy-path:2.6.2
    ports:
      - "8082:8082"
    environment:
      - SITE_ADDRESS=http://localhost:8083
      - SITE_PATH=*
      - SITE_SERVER="squidex_postgres:5000"
    depends_on:
      - squidex_postgres
    networks:
      - internal
    restart: unless-stopped
    
networks:
  internal:
    driver: bridge