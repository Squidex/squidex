## @section Global parameters

## @skip labels
labels:
service:
  ## @param service.type Kubernetes Service type
  ##
  type: ClusterIP
  ## @param service.port Kubernetes Service port
  ##
  port: 80
deployment:
  ## @param deployment.replicaCount Number of instances.
  ##
  replicaCount: 1
selectors:
  ## @skip selectors.component
  ##
  component: squidex
  ## @skip selectors.partOf
  ##
  partOf: ""
  ## @skip selectors.version
  ##
  version: ""
image:
  ## @param image.repository Squidex image registry
  ##
  repository: squidex/squidex
  ## @param image.tag Squidex image tag
  ##
  tag: "7.0.2"
  ## @param image.pullPolicy Squidex image pull policy
  ##
  pullPolicy: IfNotPresent

## @skip resources
resources: { }
## @skip nodeSelector
nodeSelector: { }
## @skip tolerations
tolerations: [ ]
## @skip affinity
affinity: { }

## @skip clusterSuffix
clusterSuffix: cluster.local

## @param runAsNonRoot
## Set to true to run Squidex as nonroot. Defaults to false for backwards compatibility.
runAsNonRoot: false

## @param podSecurityContext - object - optional
## You can modify the security context used to run PODS in the cluster
## For information regarding which settings are required per policy see: https://kubernetes.io/docs/concepts/security/pod-security-standards/
## An example that follows the Restricted profile is described below:
#
podSecurityContext:
  seccompProfile:
    type: RuntimeDefault
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 10000
  fsGroup: 10000

## @param containerSecurityContext - object - optional
## You can modify the security context used to run CONTAINERS in the cluster
## For information regarding which settings are required per policy see: https://kubernetes.io/docs/concepts/security/pod-security-standards/
## An example that follows the Restricted profile is described below:
#
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
    add:
      - NET_BIND_SERVICE

## @skip auth
auth:
  ## 

ingress:
  ## @param ingress.enabled True to deploy an ingress
  ## If true, Squidex Ingress will be created.
  ##
  enabled: true
  ingressClassName: nginx
  ## Squidex Ingress annotations
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: "true"
  ## @param ingress.hostName The host name for the ingress.
  ## 
  hostName: squidex.local
  
  ## @skip ingress.tls
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

## @section Squidex parameters

env:
  # Define the type of the event store
  ## @param env.EVENTSTORE__MONGODB__DATABASE The name of the database for events
  EVENTSTORE__MONGODB__DATABASE: "Squidex"

  ## @skip env.EVENTSTORE__TYPE
  ## Define the type of the event store
  ##
  EVENTSTORE__TYPE: MongoDb

  # CREATE LOCAL ADMIN USER
  ## @param env.IDENTITY__ADMINEMAIL The initial admin email address.
  ##
  IDENTITY__ADMINEMAIL: ""
  ## @param env.IDENTITY__ADMINPASSWORD The initial admin email address.
  ##
  IDENTITY__ADMINPASSWORD: ""
  ## @param env.IDENTITY__ADMINRECREATE Recreate the admin if it does not exist or the password does not match
  ##
  IDENTITY__ADMINRECREATE: false # 
  ## @param env.IDENTITY__ALLOWPASSWORDAUTH Enable password auth. Set this to false if you want to disable local login, leaving only 3rd party login options
  ## 
  IDENTITY__ALLOWPASSWORDAUTH: "true"
  ## @param env.IDENTITY__LOCKAUTOMATICALLY Lock new users automatically, the administrator must unlock them.
  ##
  IDENTITY__LOCKAUTOMATICALLY: "false" 
  ## @param env.IDENTITY__PRIVACYURL The url to you privacy statements.
  ##
  IDENTITY__PRIVACYURL: "https://squidex.io/privacy"
  ## @param env.IDENTITY__SHOWPII Set to true to show PII (Personally Identifiable Information) in the logs
  ## 
  IDENTITY__SHOWPII: true # 

  ## @param env.IDENTITY__GOOGLECLIENT Google client ID (keep empty to disable Google authentication).
  ##
  IDENTITY__GOOGLECLIENT: null
  ## @param env.IDENTITY__GOOGLESECRET Google client secret (keep empty to disable Google authentication).
  ##
  IDENTITY__GOOGLESECRET: null

  ## @param env.IDENTITY__GITHUBCLIENT Github client ID (keep empty to disable Github authentication).
  ##
  IDENTITY__GITHUBCLIENT: null
  ## @param env.IDENTITY__GITHUBSECRET Github client secret (keep empty to disable Github authentication).
  ##
  IDENTITY__GITHUBSECRET: null

  ## @param env.IDENTITY__MICROSOFTCLIENT Microsoft client ID (keep empty to disable Microsoft authentication).
  ##
  IDENTITY__MICROSOFTCLIENT: null
  ## @param env.IDENTITY__MICROSOFTSECRET Microsoft client secret (keep empty to disable Microsoft authentication).
  ##
  IDENTITY__MICROSOFTSECRET: null
  ## @param env.IDENTITY__MICROSOFTTENANT Optional tenant name for Azure AD.
  ##
  IDENTITY__MICROSOFTTENANT: null

  # Settings for your custom oidc server
  ## @param env.IDENTITY__OIDCAUTHORITY The URL to the custom OIDC authority.
  ##
  IDENTITY__OIDCAUTHORITY: null
  ## @param env.IDENTITY__OIDCCLIENT The client ID to the authority.
  ##
  IDENTITY__OIDCCLIENT: null
  ## @param env.IDENTITY__OIDCSECRET The client secret to the authority.
  ##
  IDENTITY__OIDCSECRET: null
  ## @param env.IDENTITY__OIDCGETCLAIMSFROMUSERINFOENDPOINT True to get claims from the user endpoint.
  ##
  IDENTITY__OIDCGETCLAIMSFROMUSERINFOENDPOINT: false
  ## @param env.IDENTITY__OIDCMETADATAADDRESS A custom address for OIDC metadata.
  ##
  IDENTITY__OIDCMETADATAADDRESS: null
  ## @param env.IDENTITY__OIDCNAME The name of the OIDC integration or server. Used in the UI
  ##
  IDENTITY__OIDCNAME: null
  ## @param env.IDENTITY__OIDCRESPONSETYPE The type of the response. id_token or code.
  ##
  IDENTITY__OIDCRESPONSETYPE: null 
  ## @param env.IDENTITY__OIDCSCOPES The scopes.
  ##
  IDENTITY__OIDCSCOPES: [] # ["email"]
  ## @param env.IDENTITY__OIDCSINGOUTREDIRECTURL The redirect URL for the sign out.
  ##
  IDENTITY__OIDCSINGOUTREDIRECTURL: null

  ## @skip env.LETSENCRYPT_HOST
  LETSENCRYPT_HOST: null
  ## @skip env.LETSENCRYPT_EMAIL
  LETSENCRYPT_EMAIL: null

  ## @param env.LOGGING__APPLICATIONINSIGHTS__ENABLED Enable monitoring via application insights.
  ##
  LOGGING__APPLICATIONINSIGHTS__ENABLED: false
  ## @param env.LOGGING__APPLICATIONINSIGHTS__CONNECTIONSTRING The connection string to application insights.
  ##
  LOGGING__APPLICATIONINSIGHTS__CONNECTIONSTRING: null # "instrumentationkey=keyvalue"
  ## @param env.LOGGING__COLORS Use colors in the console output.
  ##
  LOGGING__COLORS: false
  ## @param env.LOGGING__HUMAN Setting the flag to true, enables well formatteds json logs.
  ##
  LOGGING__HUMAN: false
  ## @param env.LOGGING__LEVEL Trace, Debug, Information, Warning, Error, Fatal
  ##
  LOGGING__LEVEL: INFORMATION 
  ## @param env.LOGGING__LOGREQUESTS Set to false to disable logging of http requests.
  ##
  LOGGING__LOGREQUESTS: true
  ## @param env.LOGGING__OTLP__ENABLED True, to enable OpenTelemetry Protocol integration
  ##
  LOGGING__OTLP__ENABLED: false
  ## @param env.LOGGING__OLTP__ENDPOINT The endpoint to the agent
  ##
  LOGGING__OLTP__ENDPOINT: null
  ## @param env.LOGGING__STACKDRIVER__ENABLED True, to enable stackdriver integration.
  ##
  LOGGING__STACKDRIVER__ENABLED: false
  ## @param env.LOGGING__STOREENABLED False to disable the log store for HTTP requests.
  ##
  LOGGING__STOREENABLED: true
  ## @param env.LOGGING__STORERETENTIONINDAYS The number of days request log items will be stored
  ##
  LOGGING__STORERETENTIONINDAYS: 90

  ## @skip env.STORE__TYPE
  STORE__TYPE: MongoDb
  ## @param env.STORE__MONGODB__DATABASE The name of the main database.
  ##
  STORE__MONGODB__DATABASE: "Squidex"
  ## @param env.STORE__MONGODB__CONTENTDATABASE The name of the database for content items.
  ##
  STORE__MONGODB__CONTENTDATABASE: "SquidexContent"
  
  ## @skip env.ASSETSTORE__TYPE
  ASSETSTORE__TYPE: MongoDb

  ## @param env.URLS__BASEURL Set the base url of your application, to generate correct urls in background process.
  URLS__BASEURL: https://squidex.local/ # 

  ## @param env.URLS__ENFORCEHTTPS Set it to true to redirect the user from http to https permanently
  URLS__ENFORCEHTTPS: false

  ## @param env.ASPNETCORE_URLS: an override to ensure that kestrel starts on a non-privileged port
  ASPNETCORE_URLS: http://+:80

## @section MongoDB parameters
mongodb-replicaset:
  ## @param mongodb-replicaset.enabled Uses the custom mongoDB instance.
  ##
  enabled: true
  ## @param mongodb-replicaset.replicas The number of replicas.
  ##
  replicas: 3
  
  ## @skip mongodb-replicaset.auth
  auth:
    enabled: false
    existingKeySecret: ""
    existingAdminSecret: ""
    existingMetricsSecret: ""
    # adminUser: username
    # adminPassword: password
    # metricsUser: metrics
    # metricsPassword: password
    # key: keycontent
  
  persistentVolume:
    ## @param mongodb-replicaset.persistentVolume.enabled If true, persistent volume claims are created.
    ##
    enabled: true
    ## @param mongodb-replicaset.persistentVolume.storageClass Persistent volume storage class.
    ## mongodb-replicaset data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    ##
    storageClass: ""
    ## @param mongodb-replicaset.persistentVolume.accessModes Persistent volume access modes.
    ##
    accessModes:
      - ReadWriteOnce
    ## @param mongodb-replicaset.persistentVolume.size Persistent volume size.
    ##
    size: 10Gi
  
  ## @skip mongodb-replicaset.nodeSelector
  nodeSelector: {}
